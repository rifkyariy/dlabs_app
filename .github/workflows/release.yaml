name: Flutter internal release

on:
  push:
    branches: [master]

jobs:
  release_firebase_app_dist:
    name: build and release to firebase app distribution
    if: startsWith(github.event.head_commit.message, 'release:')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "2.8.1"
      - name: Flutter version
        run: flutter --version
      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      - name: Download pub dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=upload" >> android/key.properties

      - name: Download .env
        id: local_env
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: .env
          encodedString: ${{ secrets.LOCAL_ENV }}

      # - name: Create .env
      #   run: |
      #     cp ${{steps.local_env.outputs.filePath}} .env

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Cache bundle dependencies
        uses: actions/cache@v2

        with:
          path: android/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Download bundle dependencies
        working-directory: ./android
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install
      - name: Release to Firebase App Distribution
        working-directory: ./android
        env:
          FIREBASE_CLI_TOKEN: ${{ secrets.FIREBASE_CLI_TOKEN }}
        run: |
          bundle exec fastlane android distribute
